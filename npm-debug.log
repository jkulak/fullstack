0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'generator-node-express' ]
2 info using npm@2.15.9
3 info using node@v4.5.0
4 verbose install initial load of /usr/lib/package.json
5 verbose readDependencies loading dependencies from /usr/lib/package.json
6 silly cache add args [ 'generator-node-express', null ]
7 verbose cache add spec generator-node-express
8 silly cache add parsed spec Result {
8 silly cache add   raw: 'generator-node-express',
8 silly cache add   scope: null,
8 silly cache add   name: 'generator-node-express',
8 silly cache add   rawSpec: '',
8 silly cache add   spec: 'latest',
8 silly cache add   type: 'tag' }
9 silly addNamed generator-node-express@latest
10 verbose addNamed "latest" is being treated as a dist-tag for generator-node-express
11 info addNameTag [ 'generator-node-express', 'latest' ]
12 silly mapToRegistry name generator-node-express
13 silly mapToRegistry using default registry
14 silly mapToRegistry registry https://registry.npmjs.org/
15 silly mapToRegistry data Result {
15 silly mapToRegistry   raw: 'generator-node-express',
15 silly mapToRegistry   scope: null,
15 silly mapToRegistry   name: 'generator-node-express',
15 silly mapToRegistry   rawSpec: '',
15 silly mapToRegistry   spec: 'latest',
15 silly mapToRegistry   type: 'tag' }
16 silly mapToRegistry uri https://registry.npmjs.org/generator-node-express
17 verbose addNameTag registry:https://registry.npmjs.org/generator-node-express not in flight; fetching
18 verbose request uri https://registry.npmjs.org/generator-node-express
19 verbose request no auth needed
20 info attempt registry request try #1 at 4:03:42 AM
21 verbose request id 7456caa66ef20928
22 http request GET https://registry.npmjs.org/generator-node-express
23 http 200 https://registry.npmjs.org/generator-node-express
24 verbose headers { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
24 verbose headers   etag: '"11GB0WVOMDGQPMRRLWW1ZTC6P"',
24 verbose headers   'content-type': 'application/json',
24 verbose headers   'content-encoding': 'gzip',
24 verbose headers   'cache-control': 'max-age=300',
24 verbose headers   'content-length': '3755',
24 verbose headers   'accept-ranges': 'bytes',
24 verbose headers   date: 'Fri, 09 Sep 2016 04:03:42 GMT',
24 verbose headers   via: '1.1 varnish',
24 verbose headers   age: '37',
24 verbose headers   connection: 'keep-alive',
24 verbose headers   'x-served-by': 'cache-dfw1839-DFW',
24 verbose headers   'x-cache': 'HIT',
24 verbose headers   'x-cache-hits': '1',
24 verbose headers   'x-timer': 'S1473393822.232776,VS0,VE0',
24 verbose headers   vary: 'Accept-Encoding' }
25 silly get cb [ 200,
25 silly get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
25 silly get     etag: '"11GB0WVOMDGQPMRRLWW1ZTC6P"',
25 silly get     'content-type': 'application/json',
25 silly get     'content-encoding': 'gzip',
25 silly get     'cache-control': 'max-age=300',
25 silly get     'content-length': '3755',
25 silly get     'accept-ranges': 'bytes',
25 silly get     date: 'Fri, 09 Sep 2016 04:03:42 GMT',
25 silly get     via: '1.1 varnish',
25 silly get     age: '37',
25 silly get     connection: 'keep-alive',
25 silly get     'x-served-by': 'cache-dfw1839-DFW',
25 silly get     'x-cache': 'HIT',
25 silly get     'x-cache-hits': '1',
25 silly get     'x-timer': 'S1473393822.232776,VS0,VE0',
25 silly get     vary: 'Accept-Encoding' } ]
26 verbose get saving generator-node-express to /home/vagrant/.npm/registry.npmjs.org/generator-node-express/.cache.json
27 verbose correctMkdir /home/vagrant/.npm correctMkdir not in flight; initializing
28 silly addNameTag next cb for generator-node-express with tag latest
29 silly addNamed generator-node-express@0.0.3
30 verbose addNamed "0.0.3" is a plain semver version for generator-node-express
31 silly mapToRegistry name generator-node-express
32 silly mapToRegistry using default registry
33 silly mapToRegistry registry https://registry.npmjs.org/
34 silly mapToRegistry data Result {
34 silly mapToRegistry   raw: 'generator-node-express',
34 silly mapToRegistry   scope: null,
34 silly mapToRegistry   name: 'generator-node-express',
34 silly mapToRegistry   rawSpec: '',
34 silly mapToRegistry   spec: 'latest',
34 silly mapToRegistry   type: 'tag' }
35 silly mapToRegistry uri https://registry.npmjs.org/generator-node-express
36 verbose addRemoteTarball https://registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz not in flight; adding
37 verbose addRemoteTarball [ 'https://registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz',
37 verbose addRemoteTarball   'e83c8fbe4701d4923cc7304d8bf33a12d73e4ad2' ]
38 info retry fetch attempt 1 at 4:03:42 AM
39 info attempt registry request try #1 at 4:03:42 AM
40 http fetch GET https://registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz
41 http fetch 200 https://registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz
42 silly fetchAndShaCheck shasum e83c8fbe4701d4923cc7304d8bf33a12d73e4ad2
43 verbose addTmpTarball /tmp/npm-21094-2ac2d63f/registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz not in flight; adding
44 verbose addTmpTarball already have metadata; skipping unpack for generator-node-express@0.0.3
45 verbose correctMkdir /home/vagrant/.npm correctMkdir not in flight; initializing
46 silly cache afterAdd generator-node-express@0.0.3
47 verbose afterAdd /home/vagrant/.npm/generator-node-express/0.0.3/package/package.json not in flight; writing
48 verbose correctMkdir /home/vagrant/.npm correctMkdir not in flight; initializing
49 verbose afterAdd /home/vagrant/.npm/generator-node-express/0.0.3/package/package.json written
50 silly install resolved [ { name: 'generator-node-express',
50 silly install resolved     version: '0.0.3',
50 silly install resolved     description: 'A generator for Yeoman that will kick start a Node Application using Express.',
50 silly install resolved     keywords:
50 silly install resolved      [ 'yeoman-generator',
50 silly install resolved        'Express',
50 silly install resolved        'Express3-Handlebars',
50 silly install resolved        'Inuit.css',
50 silly install resolved        'Bourbon' ],
50 silly install resolved     homepage: 'https://github.com/lukelarsen/generator-node-express',
50 silly install resolved     bugs: { url: 'https://github.com/lukelarsen/generator-node-express/issues' },
50 silly install resolved     author:
50 silly install resolved      { name: 'Luke',
50 silly install resolved        email: 'luke@lukelarsen.com',
50 silly install resolved        url: 'https://github.com/lukelarsen' },
50 silly install resolved     main: 'app/index.js',
50 silly install resolved     repository:
50 silly install resolved      { type: 'git',
50 silly install resolved        url: 'git://github.com/lukelarsen/generator-node-express.git' },
50 silly install resolved     scripts: { test: 'mocha' },
50 silly install resolved     dependencies: { 'yeoman-generator': '~0.13.0' },
50 silly install resolved     devDependencies: {},
50 silly install resolved     peerDependencies: { yo: '>=1.0.0-rc.1' },
50 silly install resolved     engines: { node: '>=0.8.0', npm: '>=1.2.10' },
50 silly install resolved     licenses: [ [Object] ],
50 silly install resolved     readme: '# generator-node-express\n\nA generator for [Yeoman](http://yeoman.io).\n\n\n## Getting Started\n\n### What is Yeoman?\n\n![](http://i.imgur.com/JHaAlBJ.png)\n\nFrom the default Yeoman Generator:\n\n>Basically, he wears a top hat, lives in your computer, and waits for you to tell him what kind of application you wish to create.\n\n>Not every new computer comes with a Yeoman pre-installed. He lives in the [npm](https://npmjs.org) package repository. You only have to ask for him once, then he packs up and moves into your hard drive. *Make sure you clean up, he likes new and shiny things.*\n\n\nTo install Yeoman you will need to have npm (node packaged modules) installed. It comes with <a href="http://nodejs.org/" target="_blank">Node</a>. You can install Node by using the downloader or through <a href="http://brew.sh/" target="_blank">Brew</a>. I like Brew. If you use Brew you\'ll need to add this to your .bash_profile. \n\n```\nhomebrew=/usr/local/share/npm/bin\n```\n\nHere is a post on <a href="http://www.lukelarsen.com/post/02-installing-node" target="_blank">installing Node</a> if you need it.\n\nOnce Node is installed you\'ll have access to npm so you can use this to install Yeoman.\n\n\n```\n$ npm install -g yo\n```\n\nThe -g means that you are installing Yeoman globally. If you wish to uninstall Yeoman you can do so with this command.\n\n```\n$ npm uninstall -g yo\n```\n\n### What\'s included in this generator\n\nThis generator uses some tools I find useful. Those include:\n\n<ul>\n    <li><a href="http://expressjs.com/" target="_blank">Express.js</a></li>\n    <li><a href="https://github.com/ericf/express3-handlebars" target="_blank">Express3-Handlebars</a> for templating</li>\n    <li><a href="http://sass-lang.com/" target="_blank">Sass</a> for styling</li>\n    <li>Javascript linting</li>\n    <li>It will open your project in your editor of choice</li>\n    <li>It will open your project in a browser of your choice</li>\n    <li>It will watch for changes to your files and recompile or restart the server if needed.</li>\n    <li>Uses <a href="https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei?hl=en" target="_blank">LiveReload</a> to refresh the browser when saving</li>\n    <li>It will build a production version of your app when you are ready to deploy</li>\n    <li>It comes ready to deploy to <a href="http://heroku.com" target="_blank">Heroku</a></li>\n</ul>\n\nOptional tools\n<ul>\n    <li><a href="http://inuitcss.com/" target="_blank">Inuit.css</a> - A powerful designless Sass framework</li>\n    <li><a href="http://bourbon.io/" target="_blank">Bourbon</a> - Sass mixin library</li>\n    <li><a href="http://angularjs.org/" target="_blank">Angular</a></li>\n    <li><a href="http://jquery.com/" target="_blank">jQuery</a></li>\n</ul>\n\n### Installing this generator\n\nWith Node and npm installed run this to install.\n\n```\n$ npm install -g generator-node-express\n```\n\n\n### Using this generator\n\nWith the generator installed it is time to run it. Create a directory on your computer somewhere and cd into it via the terminal. Then run:\n\n```\n$ yo node-express\n```\n\nYeoman will ask you some questions. Answer them and it will install stuff based on your answers.\n\nOnce Yeoman is done setting up your project run this command to start working on it.\n\n```\n$ grunt workon\n```\n\nThis starts the server, launches the project in your editor, opens the project in a browser, and starts watching the project for changes.\n\n<h4>LiveReload</h4>\n\nTo enable LiveRelaod you\'ll need to install the Chrome extension.\n\n<a href="https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei" target="_blank">Live Reload Chrome extension</a>\n\nOnce installed and the project is running just turn on the Chrome Extension.\n\n\n<h4>Restarting the server</h4>\n\nWhen you edit files that need the server to restart for you to see the changes, most of the time Grunt will just restart it for you. There are times when it gets stuck though. If this happens you can run this command to start it back up without reopening the project in your editor and browser.\n\n```\n$ grunt restart\n```\n\n<h4>Generate a production version of your app</h4>\n\nOnce your app is ready for production run this to generate a production build of your project.\n\n```\n$ grunt build\n```\n\nTo test to see if the app is using the production version of the app you can shut down the server and start it again in production mode.\n\n```\n$ NODE_ENV=production node app.js\n```\n\nIf it all works you are ready to deploy to Heroku. The Procfile at the root directory is for Heroku. Without it Heroku will choke. To deploy to Heroku you will need a <a href="http://heroku.com" target="_blank">Heorku account</a> and the <a href="https://toolbelt.heroku.com/" target="_blank">Heroku Toolbelt</a> installed.\n\nOnce that is setup use Git to commit and then Heroku to create and deploy.\n\n```\n$ git init\n$ git add .\n$ git commit -m \'init\'\n```\n\nCreate the app\n```\nheroku create\n```\n\nDeploy your code\n```\ngit push heroku master\n```\n\nTo ensure that Heroku is setup to use your production settings you\'ll need to run this:\n\n```\n$ heroku config:set NODE_ENV=production\n```\n\nOpen the project\n```\nheroku open\n```\n\n### Things to do\n\n<ul>\n    <li>Add test driven development.</li>\n</ul>',
50 silly install resolved     readmeFilename: 'README.md',
50 silly install resolved     _id: 'generator-node-express@0.0.3',
50 silly install resolved     dist:
50 silly install resolved      { shasum: 'e83c8fbe4701d4923cc7304d8bf33a12d73e4ad2',
50 silly install resolved        tarball: 'https://registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz' },
50 silly install resolved     _from: 'generator-node-express@latest',
50 silly install resolved     _npmVersion: '1.3.11',
50 silly install resolved     _npmUser: { name: 'lukelarsen', email: 'luke@lukelarsen.com' },
50 silly install resolved     maintainers: [ [Object] ],
50 silly install resolved     directories: {},
50 silly install resolved     _shasum: 'e83c8fbe4701d4923cc7304d8bf33a12d73e4ad2',
50 silly install resolved     _resolved: 'https://registry.npmjs.org/generator-node-express/-/generator-node-express-0.0.3.tgz' } ]
51 info install generator-node-express@0.0.3 into /usr/lib
52 info installOne generator-node-express@0.0.3
53 verbose installOne of generator-node-express to /usr/lib not in flight; installing
54 verbose correctMkdir /home/vagrant/.npm/_locks correctMkdir not in flight; initializing
55 verbose lock using /home/vagrant/.npm/_locks/generator-node-express-9ad9889d6f0b39d9.lock for /usr/lib/node_modules/generator-node-express
56 silly install write writing generator-node-express 0.0.3 to /usr/lib/node_modules/generator-node-express
57 verbose unbuild lib/node_modules/generator-node-express
58 silly gentlyRm /usr/lib/node_modules/generator-node-express is being purged from base /usr
59 verbose gentlyRm don't care about contents; nuking /usr/lib/node_modules/generator-node-express
60 verbose tar unpack /home/vagrant/.npm/generator-node-express/0.0.3/package.tgz
61 verbose tar unpacking to /usr/lib/node_modules/generator-node-express
62 silly gentlyRm /usr/lib/node_modules/generator-node-express is being purged
63 verbose gentlyRm don't care about contents; nuking /usr/lib/node_modules/generator-node-express
64 silly gunzTarPerm modes [ '775', '664' ]
65 error tar.unpack untar error /home/vagrant/.npm/generator-node-express/0.0.3/package.tgz
66 verbose unlock done using /home/vagrant/.npm/_locks/generator-node-express-9ad9889d6f0b39d9.lock for /usr/lib/node_modules/generator-node-express
67 verbose fstream_path /usr/lib/node_modules/generator-node-express
68 verbose fstream_type Directory
69 verbose fstream_class DirWriter
70 verbose stack Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/generator-node-express'
70 verbose stack     at Error (native)
71 verbose fstream_stack /usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:35:25
71 verbose fstream_stack /usr/lib/node_modules/npm/node_modules/mkdirp/index.js:47:53
71 verbose fstream_stack FSReqWrap.oncomplete (fs.js:82:15)
72 verbose cwd /mnt/host/mount_dir/fullstack
73 error Linux 3.13.0-95-generic
74 error argv "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "generator-node-express"
75 error node v4.5.0
76 error npm  v2.15.9
77 error path /usr/lib/node_modules/generator-node-express
78 error code EACCES
79 error errno -13
80 error syscall mkdir
81 error Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/generator-node-express'
81 error     at Error (native)
81 error  { [Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/generator-node-express']
81 error   errno: -13,
81 error   code: 'EACCES',
81 error   syscall: 'mkdir',
81 error   path: '/usr/lib/node_modules/generator-node-express',
81 error   fstream_type: 'Directory',
81 error   fstream_path: '/usr/lib/node_modules/generator-node-express',
81 error   fstream_class: 'DirWriter',
81 error   fstream_stack:
81 error    [ '/usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:35:25',
81 error      '/usr/lib/node_modules/npm/node_modules/mkdirp/index.js:47:53',
81 error      'FSReqWrap.oncomplete (fs.js:82:15)' ] }
82 error Please try running this command again as root/Administrator.
83 verbose exit [ -13, true ]
84 verbose unbuild lib/node_modules/generator-node-express
85 silly gentlyRm /usr/lib/node_modules/generator-node-express is being purged from base /usr
86 verbose gentlyRm don't care about contents; nuking /usr/lib/node_modules/generator-node-express
